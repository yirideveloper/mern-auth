{"version":3,"sources":["services/httpService.js","api/index.js","store/actions/user.js","store/thunks/user.js","store/thunks/auth.js","components/pages/ConfirmPage.jsx","components/pages/Home.jsx","components/pages/Profile.jsx","components/pages/NavBar.jsx","components/common/input.jsx","components/common/form.jsx","components/pages/Login.jsx","components/pages/LoginForgot.jsx","components/pages/LoginResetPassword.jsx","components/pages/Logout.jsx","components/pages/Register.jsx","components/common/protectedRoute.jsx","App.js","store/reducers/user.js","store/reducers/index.js","registerServiceWorker.js","index.js","store/configureStore.js"],"names":["axios","defaults","baseURL","process","REACT_APP_API_URL","withCredentials","interceptors","response","use","error","Promise","reject","httpService","get","post","put","delete","postLogin","user","http","sendResetPasswordLink","email","resetPassword","password","token","concat","LOGIN_USER","LOGOUT_USER","UPDATE_USER","attemptGetUser","dispatch","then","res","data","type","attemptLogin","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","push","abrupt","sent","stop","_x","apply","this","arguments","attemptSendResetPasswordLink","_ref2","_callee2","_context2","catch","_x2","attemptResetPassword","_ref3","_callee3","_context3","_x3","attemptLogout","attemptGetConfirmation","getConfirmation","attemptResendConfirmation","resendConfirmation","attemptResetRegister","resetRegister","ConfirmPage","onClick","_this","props","match","params","console","log","isAuth","react_default","createElement","Redirect","to","className","Component","connect","Home","href","username","withRouter","NavLink","activeClassName","Input","name","label","icon","rest","objectWithoutProperties","htmlFor","assign","id","placeholder","includes","Form","state","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","item","value","path","message","err","return","validateProperty","obj","defineProperty","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","objectSpread","errorMessage","disabled","length","_this$state","common_input","onChange","LoginForm","string","required","status","onSubmit","renderInput","Link","renderButton","LoginForgot","submited","minDomainAtoms","Fragment","min","max","Logout","RegisterForm","initialState","resend","attemptRegister","resendEmail","reset","newUser","_ref4","_callee4","_context4","_x4","component","render","Route","pathname","from","location","App","loading","_this2","_this$props","store","history","es","lib","pages_NavBar","Switch","exact","protectedRoute","Profile","Register","Login","LoginResetPassword","action","isEmpty","reducers","combineReducers","router","connectRouter","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createBrowserHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","routerMiddleware","thunk","createStore","CreateRootReducer","applyMiddleware","configureStore","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d0c14439.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\naxios.interceptors.response.use(null, error => {\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import http from '../services/httpService';\n// AUTH\nexport const postLogin = user => http.post('/auth/login', user);\n\nexport const sendResetPasswordLink = email =>\n  http.post('auth/login/forgot', { email });\n\nexport const resetPassword = (password, token) =>\n  http.post(`auth/login/reset/${token}`, { password });\n\nexport const postLogout = () => http.post('/auth/logout');\n\nexport const postRegister = user => http.post('/auth/register', user);\n\nexport const getConfirmation = token => http.get(`/auth/confirmation/${token}`);\n\nexport const resendConfirmation = email => http.post('/auth/resend', { email });\n\nexport const resetRegister = email =>\n  http.post('/auth/register/reset', { email });\n\nexport const getUser = () => http.get('/user');\n","export const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\n\nexport function login(user) {\n  return {\n    type: LOGIN_USER,\n    user\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT_USER\n  };\n}\n\nexport function updateUser(user) {\n  return {\n    type: UPDATE_USER,\n    user\n  };\n}\n","import { getUser } from \"../../api/index\";\nimport { updateUser } from \"../actions/user\";\n\n// import { dispatchError } from \"../../utils/api\";\n\nexport const attemptGetUser = () => dispatch =>\n  getUser().then(res => {\n    dispatch(updateUser(res.data.user));\n    return res.data.user;\n  });\n","import { push } from 'connected-react-router';\n\nimport {\n  postRegister,\n  postLogin,\n  postLogout,\n  getConfirmation,\n  resendConfirmation,\n  resetRegister,\n  sendResetPasswordLink,\n  resetPassword\n} from '../../api/index';\nimport { login, logout } from '../actions/user';\n\nexport const attemptLogin = user => async dispatch => {\n  return await postLogin(user).then(res => {\n    dispatch(login(res.data.user));\n    dispatch(push('/home'));\n    return res.data;\n  });\n};\n\nexport const attemptSendResetPasswordLink = email => async dispatch => {\n  return await sendResetPasswordLink(email).catch(\n    dispatch(push('/login/forgot'))\n  );\n};\n\nexport const attemptResetPassword = (password, token) => async dispatch => {\n  return await resetPassword(password, token)\n    .then(() => {\n      dispatch(push('/login'));\n    })\n    .catch(dispatch(push(`/login/reset/${token}`)));\n};\n\nexport const attemptLogout = () => dispatch =>\n  postLogout().then(res => {\n    dispatch(logout());\n    dispatch(push('/login'));\n    return res.data;\n  });\n\nexport const attemptRegister = newUser => async dispatch => {\n  return await postRegister(newUser).catch(dispatch(push('/register')));\n};\n\nexport const attemptGetConfirmation = token => dispatch =>\n  getConfirmation(token)\n    .then(() => {\n      return dispatch(push('/login'));\n    })\n    .catch(dispatch(push('/register')));\n\nexport const attemptResendConfirmation = email => dispatch =>\n  resendConfirmation(email).catch(dispatch(push('/register')));\n\nexport const attemptResetRegister = email => dispatch => resetRegister(email);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { attemptGetConfirmation } from '../../store/thunks/auth';\nclass ConfirmPage extends Component {\n  onClick = async () => {\n    const token = this.props.match.params.token;\n    await this.props\n      .attemptGetConfirmation(token)\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/my-profile\" />;\n    else {\n      return (\n        <div className=\"container\">\n          <p>Click here to confirm your email</p>\n          <button onClick={this.onClick}>Confirmation</button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  attemptGetConfirmation: token => dispatch(attemptGetConfirmation(token))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfirmPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <p>Check the github repo :</p>\n        <a href=\"https://github.com/flaviuse/mern-authentification\">\n          https://github.com/flaviuse/mern-authentification\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst notFound = ({ user }) => {\n  return (\n    <div className=\"container\">\n      <p>\n        Hey <i>{user.username}</i>! Check the github repositorie:\n      </p>\n      <a href=\"https://github.com/flaviuse/mern-authentification\">\n        https://github.com/flaviuse/mern-authentification\n      </a>\n    </div>\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return {\n    user: user.user\n  };\n}\n\nexport default connect(mapStateToProps)(notFound);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst NavBar = ({ user, isAuth }) => {\n  return (\n    <nav>\n      <NavLink className=\"inactive \" activeClassName=\"active\" to=\"/home\">\n        Home\n      </NavLink>\n      {!isAuth && (\n        <div>\n          <NavLink className=\"inactive\" activeClassName=\"active\" to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink\n            className=\"inactive \"\n            activeClassName=\"active\"\n            to=\"/register\">\n            Register\n          </NavLink>\n        </div>\n      )}\n      {isAuth && (\n        <div>\n          <NavLink\n            className=\"inactive\"\n            activeClassName=\" active\"\n            to=\"/my-profile\">\n            {user.username}\n          </NavLink>\n          <NavLink className=\"item\" activeClassName=\"item active\" to=\"/logout\">\n            Logout\n          </NavLink>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return {\n    user: user.user,\n    isAuth: user.isAuth\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(NavBar));\n","import React from 'react';\n\nconst Input = ({ name, label, error, icon, ...rest }) => {\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <div>\n        <i className={icon} />\n        <input {...rest} name={name} id={name} placeholder={label} />\n      </div>\n      {error && !error.includes('to be empty') && (\n        <div className=\"error\">{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Input from './input';\n\nclass Form extends Component {\n  state = { data: {}, errors: {} };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return <button disabled={this.validate()}>{label}</button>;\n  }\n\n  renderInput(name, label, type = 'text') {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import Joi from 'joi-browser';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { attemptLogin } from '../../store/thunks/auth';\nimport Form from '../common/form.jsx';\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: '', password: '' },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .label('Username')\n      .required(),\n    password: Joi.string()\n      .label('Password')\n      .required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props.attemptLogin(data).catch(error => {\n      if (error.response && error.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = error.response.data.message;\n        this.setState({ errors });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput('username', 'Username', 'text')}\n          {this.renderInput('password', 'Password', 'password')}\n          <div>\n            <Link to=\"/login/forgot\">Forgot your password?</Link>\n          </div>\n          {this.renderButton('Login')}\n        </form>\n        <h4>Or</h4>\n        <Link to=\"/register\">Sign Up</Link>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptLogin: user => dispatch(attemptLogin(user))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Joi from 'joi-browser';\nimport Form from '../common/form.jsx';\nimport { attemptSendResetPasswordLink } from '../../store/thunks/auth';\nclass LoginForgot extends Form {\n  state = {\n    data: { email: '' },\n    errors: {},\n    submited: false\n  };\n\n  schema = {\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .required()\n      .label('Email')\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props\n      .attemptSendResetPasswordLink(data.email)\n      .then(() => this.setState({ submited: true }))\n      .catch(error => {\n        if (error.response && error.response.status === 400) {\n          const errors = { ...this.state.errors };\n          errors.email = error.response.data.message;\n          this.setState({ errors });\n        }\n      });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n\n    return (\n      <React.Fragment>\n        {!this.state.submited && (\n          <div className=\"container\">\n            <p>We will send you a reset link on the following email :</p>\n            <form onSubmit={this.handleSubmit}>\n              {this.renderInput('email', 'Email', 'text')}\n              {this.renderButton('SEND RESET LINK')}\n            </form>\n          </div>\n        )}\n        {this.state.submited && (\n          <div className=\"container\">\n            <p>A reset link has been sent.</p>\n            <p>\n              An reset link has been sent to :{this.state.data.email}. You have\n              12 hours to activate your account. It can take up to 15 min to\n              receive our email.\n            </p>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptSendResetPasswordLink: email =>\n      dispatch(attemptSendResetPasswordLink(email))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForgot);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Joi from 'joi-browser';\nimport Form from '../common/form.jsx';\nimport { attemptResetPassword } from '../../store/thunks/auth';\nclass LoginForgot extends Form {\n  state = {\n    data: { password: '' },\n    errors: {}\n  };\n\n  schema = {\n    password: Joi.string()\n      .min(5)\n      .max(255)\n      .required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    const token = this.props.match.params.token;\n    const password = data.password;\n    await this.props.attemptResetPassword(password, token).catch(error => {\n      if (error.response && error.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.password = error.response.data.message;\n        this.setState({ errors });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n    return (\n      <div className=\"container\">\n        <p>New password</p>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput('password', 'Password', 'password')}\n          {this.renderButton('RESET PASSWORD')}\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptResetPassword: (password, token) =>\n      dispatch(attemptResetPassword(password, token))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForgot);\n","import { Component } from 'react';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { attemptLogout } from '../../store/thunks/auth';\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.dispatch(attemptLogout());\n    this.props.dispatch(push('/home'));\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default connect()(Logout);\n","import Joi from 'joi-browser';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  attemptRegister,\n  attemptResendConfirmation,\n  attemptResetRegister\n} from '../../store/thunks/auth';\nimport Form from '../common/form';\n\nclass RegisterForm extends Form {\n  initialState = {\n    data: { email: '', password: '', username: '' },\n    errors: {},\n    submited: false,\n    resend: false\n  };\n\n  state = this.initialState;\n\n  schema = {\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .required()\n      .label('Email'),\n    password: Joi.string()\n      .min(5)\n      .required()\n      .label('Password'),\n    username: Joi.string().required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props\n      .attemptRegister(data)\n      .then(() => this.setState({ submited: true }))\n      .catch(error => {\n        if (error.response && error.response.status === 400) {\n          const errors = { ...this.state.errors };\n          if (error.response.data.message.includes('Email')) {\n            errors.email = error.response.data.message;\n          } else {\n            errors.username = error.response.data.message;\n          }\n\n          this.setState({ errors });\n        }\n      });\n  };\n\n  resendEmail = async () => {\n    const email = this.state.data.email;\n    await this.props\n      .attemptResendConfirmation(email)\n      .then(() => this.setState({ resend: true }));\n  };\n\n  reset = async () => {\n    const email = this.state.data.email;\n    await this.props\n      .attemptResetRegister(email)\n      .then(() => this.setState(this.initialState));\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.resend && (\n          <React.Fragment>\n            {!this.state.submited && (\n              <div>\n                <div className=\"container\">\n                  <form onSubmit={this.handleSubmit}>\n                    {this.renderInput('username', 'Username', 'text')}\n                    {this.renderInput('email', 'Email', 'text')}\n                    {this.renderInput('password', 'Password', 'password')}\n                    {this.renderButton('Sign Up')}\n                  </form>\n                </div>\n              </div>\n            )}\n            {this.state.submited && (\n              <React.Fragment>\n                <div className=\"container\">\n                  <div>\n                    <p>A verification email has been sent.</p>\n                    <p>\n                      Check you mailbox : {this.state.data.email}. <br /> You\n                      have 12 hours to activate your account. It can take up to\n                      15 min to receive our email.\n                    </p>\n                    <button onClick={this.resendEmail}>\n                      Did not receive the email? Click here to send again.\n                    </button>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        {this.state.resend && (\n          <React.Fragment>\n            <div className=\"container\">\n              <div>Still not received an email? </div>\n              Try to register again. You may have given the wrong email. <br />\n              If you want to be able to user the same username :<br />\n              <button onClick={this.reset}>Click here to try again.</button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = dispatch => ({\n  attemptRegister: newUser => dispatch(attemptRegister(newUser)),\n  attemptResendConfirmation: email =>\n    dispatch(attemptResendConfirmation(email)),\n  attemptResetRegister: email => dispatch(attemptResetRegister(email))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterForm);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  render,\n  isAuth,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isAuth)\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return { isAuth: user.isAuth };\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { attemptGetUser } from './store/thunks/user';\n\nimport ConfirmPage from './components/pages/ConfirmPage.jsx';\nimport Home from './components/pages/Home.jsx';\nimport Profile from './components/pages/Profile.jsx';\nimport NavBar from './components/pages/NavBar.jsx';\nimport Login from './components/pages/Login.jsx';\nimport LoginForgot from './components/pages/LoginForgot.jsx';\nimport LoginResetPassword from './components/pages/LoginResetPassword.jsx';\nimport Logout from './components/pages/Logout.jsx';\nimport Register from './components/pages/Register.jsx';\nimport ProtectedRoute from './components/common/protectedRoute.jsx';\n\nclass App extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    this.props\n      .attemptGetUser()\n      .then(() => this.setState({ loading: false }))\n      .catch(() => this.setState({ loading: false }));\n  }\n  render() {\n    const { store, history } = this.props;\n    return (\n      !this.state.loading && (\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <React.Fragment>\n              <NavBar />\n              <Switch>\n                <Route path=\"/home\" exact component={Home} />\n                <ProtectedRoute path=\"/my-profile\" exact component={Profile} />\n                <Route\n                  path=\"/account/confirm/:token\"\n                  exact\n                  component={ConfirmPage}\n                />\n                <Route path=\"/register\" exact component={Register} />\n                <Route path=\"/login\" exact component={Login} />\n                <Route path=\"/login/forgot\" exact component={LoginForgot} />\n                <Route\n                  path=\"/login/reset/:token\"\n                  component={LoginResetPassword}\n                />\n                <ProtectedRoute path=\"/logout\" exact component={Logout} />\n                <Redirect from=\"/\" exact to=\"/home\" />\n                <Redirect to=\"/home\" />\n              </Switch>\n            </React.Fragment>\n          </ConnectedRouter>\n        </Provider>\n      )\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  attemptGetUser: () => dispatch(attemptGetUser())\n});\n\nconst mapStateToProps = null;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// import update from \"immutability-helper\";\nimport { LOGIN_USER, LOGOUT_USER, UPDATE_USER } from '../actions/user';\nimport { isEmpty } from 'ramda/src/isEmpty';\n\nexport default function user(state = { isAuth: false, user: {} }, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return {\n        user: action.user,\n        isAuth: true\n      };\n\n    case LOGOUT_USER:\n      return {\n        isAuth: false\n      };\n    case UPDATE_USER: {\n      if (isEmpty(action.user)) {\n        return { user: action.user, isAuth: false };\n      } else {\n        return { user: action.user, isAuth: true };\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport user from \"./user\";\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    user\n  });\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from 'history';\n\nimport App from './App';\nimport configureStore from './store/configureStore';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './index.css';\n\nconst history = createBrowserHistory();\nconst store = configureStore(history);\n\nReactDOM.render(\n  <App store={store} history={history} />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport thunk from \"redux-thunk\";\nimport CreateRootReducer from \"./reducers/index\";\n\nexport default function configureStore(history, initialState = {}) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewares = [routerMiddleware(history), thunk];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const logger = createLogger({ collapsed: true, diff: true });\n    middlewares.push(logger);\n  }\n\n  return createStore(\n    CreateRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n}\n"],"sourceRoot":""}