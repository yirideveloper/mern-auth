{"version":3,"sources":["utils/polyfill.js","services/logService.js","services/httpService.js","store/actions/user.js","utils/api.js","api/index.js","store/thunks/user.js","utils/ramda.js","store/thunks/auth.js","components/pages/ConfirmPage/ConfirmPage.jsx","components/pages/Home/Home.jsx","components/pages/Profile/Profile.jsx","components/pages/NavBar/NavBar.jsx","components/common/input/input.jsx","components/common/form/form.jsx","components/pages/Login/Login.jsx","components/pages/LoginForgot/LoginForgot.jsx","components/pages/LoginResetPassword/LoginResetPassword.jsx","components/pages/Logout/Logout.jsx","components/pages/Register/Register.jsx","components/common/protectedRoute.jsx","App.js","store/reducers/user.js","store/reducers/index.js","registerServiceWorker.js","index.js","store/configureStore.js","components/pages/Login/Login.module.css","components/pages/Register/Register.module.css","components/pages/NavBar/NavBar.module.css","components/pages/LoginForgot/LoginForgot.module.css","components/pages/ConfirmPage/ConfirmPage.module.css","components/pages/LoginResetPassword/LoginResetPassword.module.css","components/pages/Home/Home.module.css","components/pages/Profile/Profile.module.css"],"names":["Event","prototype","Object","defineProperty","get","path","currentElem","this","target","push","parentElement","indexOf","window","document","logService","init","Raven","config","process","REACT_APP_SENTRY","release","environment","autoBreadcrumbs","console","install","log","error","captureException","axios","defaults","baseURL","REACT_APP_API_URL","withCredentials","interceptors","response","use","status","logger","toast","Promise","reject","httpService","post","put","delete","LOGIN_USER","LOGOUT_USER","UPDATE_USER","logout","type","dispatchError","dispatch","data","concat","message","position","POSITION","TOP_RIGHT","handleError","handleSuccess","success","postLogin","user","http","then","sendResetPasswordLink","email","catch","resetPassword","password","token","attemptGetUser","res","ramda","assoc","equals","head","identity","isEmpty","map","match","omit","pick","slice","tail","toUpper","attemptLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","_x","apply","arguments","attemptSendResetPasswordLink","_ref2","_callee2","_context2","_x2","attemptResetPassword","_ref3","_callee3","_context3","_x3","attemptLogout","attemptGetConfirmation","getConfirmation","attemptResendConfirmation","resendConfirmation","attemptResetRegister","resetRegister","ConfirmPage","onChange","_this","props","params","isAuth","react_default","createElement","Redirect","to","id","styles","container","title","class","messageContainer","lib_es","sitekey","REACT_APP_CAPTCHA_KEY","Component","connect","Home","className","href","username","withRouter","navbar","left","NavLink","activeClassName","right","Input","name","label","icon","rest","objectWithoutProperties","htmlFor","assign","placeholder","includes","Form","state","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","item","value","err","return","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","objectSpread","errorMessage","disabled","length","_this$state","input_input","LoginForm","string","required","formContainer","onSubmit","renderInput","forgotMessage","Link","renderButton","loginBtn","subscribe","LoginForgot","submited","minDomainAtoms","Fragment","min","max","Logout","RegisterForm","initialState","resend","attemptRegister","resendEmail","reset","signupBtn","onClick","mapStateToProps","R","newUser","_ref4","_callee4","_context4","_x4","component","render","Route","pathname","from","location","App","loading","_this2","_this$props","store","history","es","connected_react_router_lib","lib","autoClose","pages_NavBar_NavBar","Switch","exact","protectedRoute","Profile","Register","Login","LoginResetPassword","action","reducers","combineReducers","router","connectRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createBrowserHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","routerMiddleware","thunk","createStore","CreateRootReducer","applyMiddleware","configureStore","ReactDOM","src_App","getElementById","URL","origin","addEventListener","fetch","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","link"],"mappings":"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","file":"static/js/main.db2514fc.chunk.js","sourcesContent":["(function eventPath() {\n  if (!('path' in Event.prototype)) {\n    Object.defineProperty(Event.prototype, 'path', {\n      get() {\n        const path = [];\n        let currentElem = this.target;\n        while (currentElem) {\n          path.push(currentElem);\n          currentElem = currentElem.parentElement;\n        }\n        if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n          path.push(document);\n        }\n        if (path.indexOf(window) === -1) {\n          path.push(window);\n        }\n        return path;\n      },\n    });\n  }\n}());\n","import Raven from \"raven-js\";\n\nfunction init() {\n  Raven.config(process.env.REACT_APP_SENTRY, {\n    release: \"1-0-0\",\n    environment: \"development-test\",\n    autoBreadcrumbs: {\n      console: false\n    }\n  }).install();\n}\n\nfunction log(error) {\n  Raven.captureException(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status <= 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occured\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","export const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\n\nexport function login(user) {\n  return {\n    type: LOGIN_USER,\n    user\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT_USER\n  };\n}\n\nexport function updateUser(user) {\n  return {\n    type: UPDATE_USER,\n    user\n  };\n}\n","import { push } from \"connected-react-router\";\nimport { logout } from \"../store/actions/user\";\nimport { toast } from \"react-toastify\";\n\nexport const dispatchError = dispatch => error => {\n  console.log(\"disp trig\", error.response.data);\n  if (error.response.status === 401) {\n    dispatch(logout());\n    dispatch(push(\"/login\"));\n  }\n  if (error.response) {\n    toast.error(`${error.response.data.message}`, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  }\n  throw error;\n};\n\nexport const handleError = error => {\n  console.log(\"handle trig\", error.response);\n  if (error.response) {\n    toast.error(`${error.response.data.message}`, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    throw error;\n  } else {\n    const response = {\n      status: 500,\n      body: { message: \"Internal Server error\" }\n    };\n    toast.error(`${response.body.message}`, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    throw error;\n  }\n};\n\nexport const handleSuccess = response => {\n  toast.success(`${response.data.message}`, {\n    position: toast.POSITION.TOP_RIGHT\n  });\n  return response;\n};\n","import http from \"../services/httpService\";\nimport { handleSuccess, handleError } from \"../utils/api\";\n// AUTH\nexport const postLogin = user =>\n  http.post(\"/auth/login\", user).then(handleSuccess);\n\nexport const sendResetPasswordLink = email =>\n  http\n    .post(\"auth/login/forgot\", { email })\n    .then(handleSuccess)\n    .catch(handleError);\n\nexport const resetPassword = (password, token) =>\n  http\n    .post(`auth/login/reset/${token}`, { password })\n    .then(handleSuccess)\n    .catch(handleError);\n\nexport const postLogout = () =>\n  http\n    .post(\"/auth/logout\")\n    .then(handleSuccess)\n    .catch(handleError);\n\nexport const postRegister = user =>\n  http.post(\"/auth/register\", user).then(handleSuccess);\n\nexport const getConfirmation = token =>\n  http\n    .get(`/auth/confirmation/${token}`)\n    .then(handleSuccess)\n    .catch(handleError);\n\nexport const resendConfirmation = email =>\n  http\n    .post(\"/auth/resend\", { email })\n    .then(handleSuccess)\n    .catch(handleError);\n\nexport const resetRegister = email =>\n  http\n    .post(\"/auth/register/reset\", { email })\n    .then(handleSuccess)\n    .catch(handleError);\n\n// User - DO NOT PUT HANDLING SUCCESS - It's always success : gives user or empty object. It's needed to trigger the update user in thunks.\nexport const getUser = () => http.get(\"/user\").catch(handleError);\n","import { getUser } from \"../../api/index\";\nimport { updateUser } from \"../actions/user\";\n\n// import { dispatchError } from \"../../utils/api\";\n\nexport const attemptGetUser = () => dispatch =>\n  getUser().then(res => {\n    dispatch(updateUser(res.data.user));\n    return res.data.user;\n  });\n","import assoc from \"ramda/src/assoc\";\nimport concat from \"ramda/src/concat\";\nimport equals from \"ramda/src/equals\";\nimport head from \"ramda/src/head\";\nimport identity from \"ramda/src/identity\";\nimport isEmpty from \"ramda/src/isEmpty\";\nimport map from \"ramda/src/map\";\nimport match from \"ramda/src/match\";\nimport omit from \"ramda/src/omit\";\nimport pick from \"ramda/src/pick\";\nimport slice from \"ramda/src/slice\";\nimport tail from \"ramda/src/tail\";\nimport toUpper from \"ramda/src/toUpper\";\n\nexport default {\n  assoc,\n  concat,\n  equals,\n  head,\n  identity,\n  isEmpty,\n  map,\n  match,\n  omit,\n  pick,\n  slice,\n  tail,\n  toUpper\n};\n","import { push } from \"connected-react-router\";\n\nimport {\n  postRegister,\n  postLogin,\n  postLogout,\n  getConfirmation,\n  resendConfirmation,\n  resetRegister,\n  sendResetPasswordLink,\n  resetPassword\n} from \"../../api/index\";\nimport { login, logout } from \"../actions/user\";\n\nimport { dispatchError } from \"../../utils/api\";\n\nexport const attemptLogin = user => async dispatch => {\n  return await postLogin(user).then(res => {\n    dispatch(login(res.data.user));\n    dispatch(push(\"/home\"));\n    return res.data;\n  });\n};\n\nexport const attemptSendResetPasswordLink = email => async dispatch => {\n  return await sendResetPasswordLink(email).catch(\n    dispatch(push(\"/login/forgot\"))\n  );\n};\n\nexport const attemptResetPassword = (password, token) => async dispatch => {\n  return await resetPassword(password, token)\n    .then(() => {\n      dispatch(push(\"/login\"));\n    })\n    .catch(dispatch(push(`/login/reset/${token}`)));\n};\n\nexport const attemptLogout = () => dispatch =>\n  postLogout()\n    .then(res => {\n      dispatch(logout());\n      dispatch(push(\"/login\"));\n      return res.data;\n    })\n    .catch(dispatchError(dispatch));\n\nexport const attemptRegister = newUser => async dispatch => {\n  return await postRegister(newUser).catch(dispatch(push(\"/register\")));\n};\n\nexport const attemptGetConfirmation = token => dispatch =>\n  getConfirmation(token)\n    .then(() => {\n      return dispatch(push(\"/login\"));\n    })\n    .catch(dispatch(push(\"/register\")));\n\nexport const attemptResendConfirmation = email => dispatch =>\n  resendConfirmation(email).catch(dispatch(push(\"/register\")));\n\nexport const attemptResetRegister = email => dispatch =>\n  resetRegister(email).catch(dispatchError(dispatch));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Redirect } from \"react-router-dom\";\nimport { attemptGetConfirmation } from \"../../../store/thunks/auth\";\nimport styles from \"./ConfirmPage.module.css\";\nclass ConfirmPage extends Component {\n  onChange = async () => {\n    const token = this.props.match.params.token;\n    await this.props\n      .attemptGetConfirmation(token)\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/my-profile\" />;\n    else {\n      return (\n        <div id={styles.container}>\n          <p id={styles.title}>You're so close ...</p>\n\n          <div class=\"ui success message\" id={styles.messageContainer}>\n            <div class=\"header\">\n              Click the recaptcha to confirm your inscription. <br />\n              <br />\n              You will be redirected to the login page .\n            </div>\n            <br />\n            <ReCAPTCHA\n              sitekey={process.env.REACT_APP_CAPTCHA_KEY}\n              onChange={this.onChange}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  attemptGetConfirmation: token => dispatch(attemptGetConfirmation(token))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfirmPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Home.module.css\";\nclass Home extends Component {\n  render() {\n    return (\n      <div id={styles.container}>\n        <div className=\"ui icon message\" id={styles.messageContainer}>\n          <i className=\"github icon\" />\n          <div className=\"content\">\n            <div className=\"header\">Check the github repositorie:</div>\n            <a href=\"https://github.com/flaviuse/mern-authentification\">\n              https://github.com/flaviuse/mern-authentification\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Profile.module.css\";\n\nconst notFound = ({ user }) => {\n  return (\n    <div id={styles.container}>\n      <div className=\"ui icon  message\" id={styles.messageContainer}>\n        <i className=\"github icon\" />\n        <div className=\"content\">\n          <div className=\"header\">\n            Hey <i>{user.username}</i>! Check the github repositorie:\n          </div>\n          <a href=\"https://github.com/flaviuse/mern-authentification\">\n            https://github.com/flaviuse/mern-authentification\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return {\n    user: user.user\n  };\n}\n\nexport default connect(mapStateToProps)(notFound);\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport styles from \"./NavBar.module.css\";\nimport { connect } from \"react-redux\";\n\nconst NavBar = ({ user, isAuth }) => {\n  return (\n    <div id={styles.navbar}>\n      <nav className=\"ui secondary sticky pointing   teal menu\">\n        <a\n          className=\"item\"\n          id={styles.left}\n          href=\"https://github.com/flaviuse/mern-authentification\"\n        >\n          <i className=\"large github  icon\" />\n        </a>\n        <NavLink className=\"item \" activeClassName=\"item active\" to=\"/home\">\n          Home\n        </NavLink>\n        {!isAuth && (\n          <div className=\"right menu\" id={styles.right}>\n            <NavLink\n              className=\" item \"\n              activeClassName=\"item active\"\n              to=\"/login\"\n            >\n              Login\n            </NavLink>\n            <NavLink\n              className=\"item \"\n              activeClassName=\"item active\"\n              to=\"/register\"\n            >\n              Register\n            </NavLink>\n          </div>\n        )}\n        {isAuth && (\n          <div className=\"right menu\" id={styles.right}>\n            <NavLink\n              className=\"item\"\n              activeClassName=\"item active\"\n              to=\"/my-profile\"\n            >\n              {user.username}\n            </NavLink>\n            <NavLink\n              className=\"item\"\n              activeClassName=\"item active\"\n              to=\"/logout\"\n            >\n              Logout\n            </NavLink>\n          </div>\n        )}\n      </nav>\n    </div>\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return {\n    user: user.user,\n    isAuth: user.isAuth\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(NavBar));\n","import React from \"react\";\n\nconst Input = ({ name, label, error, icon, ...rest }) => {\n  return (\n    <div className=\"field\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"ui left icon attached input \">\n        <i className={icon} />\n        <input {...rest} name={name} id={name} placeholder={label} />\n      </div>\n      {error &&\n      !error.includes(\"to be empty\") && ( // Don't show message \"input is not allowed to be empty\"\n          <div className=\"ui red mini message bottom attached\">\n            <i className=\"exclamation icon \" /> {error}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../input/input\";\n\nclass Form extends Component {\n  state = { data: {}, errors: {} };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label, styles, icon) {\n    return (\n      <button\n        className=\"ui fluid big button teal\"\n        id={styles}\n        disabled={this.validate()}\n      >\n        <i className={icon} />\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\", icon) {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        icon={icon}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import Joi from 'joi-browser';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { attemptLogin } from '../../../store/thunks/auth';\nimport Form from '../../common/form/form.jsx';\nimport styles from './Login.module.css';\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: '', password: '' },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .label('Username')\n      .required(),\n    password: Joi.string()\n      .label('Password')\n      .required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props.attemptLogin(data).catch(error => {\n      if (error.response && error.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = error.response.data.message;\n        this.setState({ errors });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n\n    return (\n      <div id={styles.container}>\n        <div id={styles.formContainer}>\n          <form onSubmit={this.handleSubmit} className=\"ui large form\">\n            {this.renderInput('username', 'Username', 'text', 'user icon')}\n            {this.renderInput('password', 'Password', 'password', 'lock icon')}\n            <div id={styles.forgotMessage}>\n              <Link to=\"/login/forgot\">Forgot your password?</Link>\n            </div>\n            {this.renderButton('Login', styles.loginBtn)}\n          </form>\n          <h4 className=\"ui horizontal divider\">Or</h4>\n          <Link\n            to=\"/register\"\n            className=\"ui big button teal\"\n            id={styles.subscribe}>\n            <i className=\"signup icon\" />\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptLogin: user => dispatch(attemptLogin(user))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../common/form/form.jsx\";\nimport { attemptSendResetPasswordLink } from \"../../../store/thunks/auth\";\nimport styles from \"./LoginForgot.module.css\";\nclass LoginForgot extends Form {\n  state = {\n    data: { email: \"\" },\n    errors: {},\n    submited: false\n  };\n\n  schema = {\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .required()\n      .label(\"Email\")\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props\n      .attemptSendResetPasswordLink(data.email)\n      .then(() => this.setState({ submited: true }))\n      .catch(error => {\n        if (error.response && error.response.status === 400) {\n          const errors = { ...this.state.errors };\n          errors.email = error.response.data.message;\n          this.setState({ errors });\n        }\n      });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n\n    return (\n      <div id={styles.container}>\n        {!this.state.submited && (\n          <React.Fragment>\n            <p id={styles.title}>Reset password</p>\n            <div id={styles.formContainer}>\n              <p>We will send you a reset link on the following email :</p>\n              <form onSubmit={this.handleSubmit} className=\"ui large form\">\n                {this.renderInput(\"email\", \"Email\", \"text\", \"envelope icon\")}\n                {this.renderButton(\"SEND RESET LINK\")}\n              </form>\n            </div>\n          </React.Fragment>\n        )}\n        {this.state.submited && (\n          <React.Fragment>\n            <div\n              className=\"ui icon positive message\"\n              id={styles.messageContainer}\n            >\n              <i className=\"inbox icon\" />\n              <div className=\"content\">\n                <div className=\"header\">A reset link has been sent.</div>\n                <p>\n                  An reset link has been sent to :{this.state.data.email}. You\n                  have 12 hours to activate your account. It can take up to 15\n                  min to receive our email.\n                </p>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptSendResetPasswordLink: email =>\n      dispatch(attemptSendResetPasswordLink(email))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForgot);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../common/form/form.jsx\";\nimport { attemptResetPassword } from \"../../../store/thunks/auth\";\nimport styles from \"./LoginResetPassword.module.css\";\nclass LoginForgot extends Form {\n  state = {\n    data: { password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    password: Joi.string()\n      .min(5)\n      .max(255)\n      .required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    const token = this.props.match.params.token;\n    const password = data.password;\n    await this.props.attemptResetPassword(password, token).catch(error => {\n      if (error.response && error.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.password = error.response.data.message;\n        this.setState({ errors });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n    return (\n      <div id={styles.container}>\n        <p id={styles.title}>New password</p>\n        <div id={styles.formContainer}>\n          <form onSubmit={this.handleSubmit} className=\"ui large form\">\n            {this.renderInput(\"password\", \"Password\", \"password\", \"lock icon\")}\n            {this.renderButton(\"RESET PASSWORD\")}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptResetPassword: (password, token) =>\n      dispatch(attemptResetPassword(password, token))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForgot);\n","import { Component } from \"react\";\nimport { push } from \"connected-react-router\";\nimport { connect } from \"react-redux\";\nimport { attemptLogout } from \"../../../store/thunks/auth\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.dispatch(attemptLogout());\n    this.props.dispatch(push(\"/home\"));\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default connect()(Logout);\n","import Joi from 'joi-browser';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  attemptRegister,\n  attemptResendConfirmation,\n  attemptResetRegister\n} from '../../../store/thunks/auth';\nimport R from '../../../utils/ramda';\nimport Form from '../../common/form/form';\nimport styles from './Register.module.css';\nclass RegisterForm extends Form {\n  initialState = {\n    data: { email: '', password: '', username: '' },\n    errors: {},\n    submited: false,\n    resend: false\n  };\n\n  state = this.initialState;\n\n  schema = {\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .required()\n      .label('Email'),\n    password: Joi.string()\n      .min(5)\n      .required()\n      .label('Password'),\n    username: Joi.string().required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props\n      .attemptRegister(data)\n      .then(() => this.setState({ submited: true }))\n      .catch(error => {\n        if (error.response && error.response.status === 400) {\n          const errors = { ...this.state.errors };\n          if (error.response.data.message.includes('Email')) {\n            errors.email = error.response.data.message;\n          } else {\n            errors.username = error.response.data.message;\n          }\n\n          this.setState({ errors });\n        }\n      });\n  };\n\n  resendEmail = async () => {\n    const email = this.state.data.email;\n    await this.props\n      .attemptResendConfirmation(email)\n      .then(() => this.setState({ resend: true }));\n  };\n\n  reset = async () => {\n    const email = this.state.data.email;\n    await this.props\n      .attemptResetRegister(email)\n      .then(() => this.setState(this.initialState));\n  };\n\n  render() {\n    return (\n      <div id={styles.container}>\n        {!this.state.resend && (\n          <React.Fragment>\n            {!this.state.submited && (\n              <div>\n                <div id={styles.formContainer}>\n                  <form onSubmit={this.handleSubmit} className=\"ui large form\">\n                    {this.renderInput(\n                      'username',\n                      'Username',\n                      'text',\n                      'user icon'\n                    )}\n                    {this.renderInput(\n                      'email',\n                      'Email',\n                      'text',\n                      'envelope icon'\n                    )}\n                    {this.renderInput(\n                      'password',\n                      'Password',\n                      'password',\n                      'lock icon'\n                    )}\n                    {this.renderButton(\n                      'Sign Up',\n                      styles.signupBtn,\n                      'signup icon'\n                    )}\n                  </form>\n                </div>\n              </div>\n            )}\n            {this.state.submited && (\n              <React.Fragment>\n                <div\n                  className=\"ui icon positive message\"\n                  id={styles.messageContainer}>\n                  <i className=\"inbox icon\" />\n                  <div className=\"content\">\n                    <div className=\"header\">\n                      A verification email has been sent.\n                    </div>\n                    <p>\n                      Check you mailbox : {this.state.data.email}. <br /> You\n                      have 12 hours to activate your account. It can take up to\n                      15 min to receive our email.\n                    </p>\n                    <button\n                      onClick={this.resendEmail}\n                      className=\"ui basic button\">\n                      Did not receive the email? Click here to send again.\n                    </button>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        {this.state.resend && (\n          <React.Fragment>\n            <div\n              className=\"ui icon warning message\"\n              id={styles.messageContainer}>\n              <i className=\"inbox icon\" />\n              <div className=\"content\">\n                <div class=\"header\">Still not received an email? </div>\n                Try to register again. You may have given the wrong email.{' '}\n                <br />\n                If you want to be able to user the same username :<br />\n                <button className=\"ui small basic button\" onClick={this.reset}>\n                  Click here to try again.\n                </button>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = R.pick([]);\n\nconst mapDispatchToProps = dispatch => ({\n  attemptRegister: newUser => dispatch(attemptRegister(newUser)),\n  attemptResendConfirmation: email =>\n    dispatch(attemptResendConfirmation(email)),\n  attemptResetRegister: email => dispatch(attemptResetRegister(email))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterForm);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  render,\n  isAuth,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isAuth)\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return { isAuth: user.isAuth };\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport { attemptGetUser } from \"./store/thunks/user\";\nimport R from \"./utils/ramda\";\n\nimport ConfirmPage from \"./components/pages/ConfirmPage/ConfirmPage.jsx\";\nimport Home from \"./components/pages/Home/Home.jsx\";\nimport Profile from \"./components/pages/Profile/Profile.jsx\";\nimport NavBar from \"./components/pages/NavBar/NavBar.jsx\";\nimport Login from \"./components/pages/Login/Login.jsx\";\nimport LoginForgot from \"./components/pages/LoginForgot/LoginForgot.jsx\";\nimport LoginResetPassword from \"./components/pages/LoginResetPassword/LoginResetPassword.jsx\";\nimport Logout from \"./components/pages/Logout/Logout.jsx\";\nimport Register from \"./components/pages/Register/Register.jsx\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    this.props\n      .attemptGetUser()\n      .then(() => this.setState({ loading: false }))\n      .catch(() => this.setState({ loading: false }));\n  }\n  render() {\n    const { store, history } = this.props;\n    return (\n      !this.state.loading && (\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <React.Fragment>\n              <ToastContainer position=\"top-right\" autoClose={2500} />\n              <NavBar />\n              <Switch>\n                <Route path=\"/home\" exact component={Home} />\n                <ProtectedRoute path=\"/my-profile\" exact component={Profile} />\n                <Route\n                  path=\"/account/confirm/:token\"\n                  exact\n                  component={ConfirmPage}\n                />\n                <Route path=\"/register\" exact component={Register} />\n                <Route path=\"/login\" exact component={Login} />\n                <Route path=\"/login/forgot\" exact component={LoginForgot} />\n                <Route\n                  path=\"/login/reset/:token\"\n                  component={LoginResetPassword}\n                />\n                <ProtectedRoute path=\"/logout\" exact component={Logout} />\n                <Redirect from=\"/\" exact to=\"/home\" />\n                <Redirect to=\"/home\" />\n              </Switch>\n            </React.Fragment>\n          </ConnectedRouter>\n        </Provider>\n      )\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  attemptGetUser: () => dispatch(attemptGetUser())\n});\n\nconst mapStateToProps = R.pick([]);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// import update from \"immutability-helper\";\nimport R from \"../../utils/ramda\";\nimport { LOGIN_USER, LOGOUT_USER, UPDATE_USER } from \"../actions/user\";\n\nexport default function user(state = { isAuth: false, user: {} }, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return {\n        user: action.user,\n        isAuth: true\n      };\n\n    case LOGOUT_USER:\n      return {\n        isAuth: false\n      };\n    case UPDATE_USER: {\n      if (R.isEmpty(action.user)) {\n        return { user: action.user, isAuth: false };\n      } else {\n        return { user: action.user, isAuth: true };\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport user from \"./user\";\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    user\n  });\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport \"./utils/polyfill\";\n\nimport logger from \"./services/logService\";\nimport App from \"./App\";\nimport configureStore from \"./store/configureStore\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nlogger.init();\n\nconst history = createBrowserHistory();\nconst store = configureStore(history);\n\nReactDOM.render(\n  <App store={store} history={history} />,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport thunk from \"redux-thunk\";\nimport CreateRootReducer from \"./reducers/index\";\n\nexport default function configureStore(history, initialState = {}) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewares = [routerMiddleware(history), thunk];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const logger = createLogger({ collapsed: true, diff: true });\n    middlewares.push(logger);\n  }\n\n  return createStore(\n    CreateRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1iBZh\",\"formContainer\":\"Login_formContainer__3X04s\",\"subscribe\":\"Login_subscribe__1Dk_q\",\"link\":\"Login_link__3sXho\",\"loginBtn\":\"Login_loginBtn__1KoJ3\",\"forgotMessage\":\"Login_forgotMessage__1I_QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Register_container__BjnqU\",\"formContainer\":\"Register_formContainer__2K1gZ\",\"messageContainer\":\"Register_messageContainer__2W28P\",\"signupBtn\":\"Register_signupBtn___4KHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2HlHh\",\"right\":\"NavBar_right__39Fqr\",\"left\":\"NavBar_left__3N8pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForgot_container__27adX\",\"formContainer\":\"LoginForgot_formContainer__1iDCv\",\"messageContainer\":\"LoginForgot_messageContainer__126_4\",\"title\":\"LoginForgot_title__3B96x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConfirmPage_container__QckiX\",\"messageContainer\":\"ConfirmPage_messageContainer__3c-eW\",\"title\":\"ConfirmPage_title__UqcuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginResetPassword_container__15n20\",\"formContainer\":\"LoginResetPassword_formContainer__2kQxz\",\"title\":\"LoginResetPassword_title__VQdFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1_3d1\",\"messageContainer\":\"Home_messageContainer__3F-tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2ZfRu\",\"messageContainer\":\"Profile_messageContainer__1-GGc\"};"],"sourceRoot":""}