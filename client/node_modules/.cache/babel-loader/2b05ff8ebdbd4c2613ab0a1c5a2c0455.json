{"ast":null,"code":"import { push } from \"connected-react-router\";\nimport { logout } from \"../store/actions/user\";\nimport { toast } from \"react-toastify\";\nexport var dispatchError = function dispatchError(dispatch) {\n  return function (error) {\n    console.log(\"disp trig\", error.response.data);\n\n    if (error.response.status === 401) {\n      dispatch(logout());\n      dispatch(push(\"/login\"));\n    }\n\n    if (error.response) {\n      toast.error(\"\".concat(error.response.data.message), {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n\n    throw error;\n  };\n};\nexport var handleError = function handleError(error) {\n  console.log(\"handle trig\", error.response);\n\n  if (error.response) {\n    toast.error(\"\".concat(error.response.data.message), {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    throw error;\n  } else {\n    var response = {\n      status: 500,\n      body: {\n        message: \"Internal Server error\"\n      }\n    };\n    toast.error(\"\".concat(response.body.message), {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    throw error;\n  }\n};\nexport var handleSuccess = function handleSuccess(response) {\n  toast.success(\"\".concat(response.data.message), {\n    position: toast.POSITION.TOP_RIGHT\n  });\n  return response;\n};","map":{"version":3,"sources":["/home/flav/Projects/Update/mern-authentification/client/src/utils/api.js"],"names":["push","logout","toast","dispatchError","dispatch","error","console","log","response","data","status","message","position","POSITION","TOP_RIGHT","handleError","body","handleSuccess","success"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ;AAAA,SAAI,UAAAC,KAAK,EAAI;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAK,CAACG,QAAN,CAAeC,IAAxC;;AACA,QAAIJ,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjCN,MAAAA,QAAQ,CAACH,MAAM,EAAP,CAAR;AACAG,MAAAA,QAAQ,CAACJ,IAAI,CAAC,QAAD,CAAL,CAAR;AACD;;AACD,QAAIK,KAAK,CAACG,QAAV,EAAoB;AAClBN,MAAAA,KAAK,CAACG,KAAN,WAAeA,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBE,OAAnC,GAA8C;AAC5CC,QAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAeC;AADmB,OAA9C;AAGD;;AACD,UAAMT,KAAN;AACD,GAZoC;AAAA,CAA9B;AAcP,OAAO,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAAAV,KAAK,EAAI;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAAK,CAACG,QAAjC;;AACA,MAAIH,KAAK,CAACG,QAAV,EAAoB;AAClBN,IAAAA,KAAK,CAACG,KAAN,WAAeA,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBE,OAAnC,GAA8C;AAC5CC,MAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAeC;AADmB,KAA9C;AAGA,UAAMT,KAAN;AACD,GALD,MAKO;AACL,QAAMG,QAAQ,GAAG;AACfE,MAAAA,MAAM,EAAE,GADO;AAEfM,MAAAA,IAAI,EAAE;AAAEL,QAAAA,OAAO,EAAE;AAAX;AAFS,KAAjB;AAIAT,IAAAA,KAAK,CAACG,KAAN,WAAeG,QAAQ,CAACQ,IAAT,CAAcL,OAA7B,GAAwC;AACtCC,MAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAeC;AADa,KAAxC;AAGA,UAAMT,KAAN;AACD;AACF,CAjBM;AAmBP,OAAO,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAAAT,QAAQ,EAAI;AACvCN,EAAAA,KAAK,CAACgB,OAAN,WAAiBV,QAAQ,CAACC,IAAT,CAAcE,OAA/B,GAA0C;AACxCC,IAAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,CAAeC;AADe,GAA1C;AAGA,SAAON,QAAP;AACD,CALM","sourcesContent":["import { push } from \"connected-react-router\";\nimport { logout } from \"../store/actions/user\";\nimport { toast } from \"react-toastify\";\n\nexport const dispatchError = dispatch => error => {\n  console.log(\"disp trig\", error.response.data);\n  if (error.response.status === 401) {\n    dispatch(logout());\n    dispatch(push(\"/login\"));\n  }\n  if (error.response) {\n    toast.error(`${error.response.data.message}`, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  }\n  throw error;\n};\n\nexport const handleError = error => {\n  console.log(\"handle trig\", error.response);\n  if (error.response) {\n    toast.error(`${error.response.data.message}`, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    throw error;\n  } else {\n    const response = {\n      status: 500,\n      body: { message: \"Internal Server error\" }\n    };\n    toast.error(`${response.body.message}`, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    throw error;\n  }\n};\n\nexport const handleSuccess = response => {\n  toast.success(`${response.data.message}`, {\n    position: toast.POSITION.TOP_RIGHT\n  });\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}