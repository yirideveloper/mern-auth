{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport CreateRootReducer from \"./reducers/index\";\nexport default function configureStore(history) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var middlewares = [routerMiddleware(history), thunk];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var logger = createLogger({\n      collapsed: true,\n      diff: true\n    });\n    middlewares.push(logger);\n  }\n\n  return createStore(CreateRootReducer(history), initialState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n}","map":{"version":3,"sources":["/home/flav/Projects/Update/mern-authentification/client/src/store/configureStore.js"],"names":["createStore","applyMiddleware","compose","createLogger","routerMiddleware","thunk","CreateRootReducer","configureStore","history","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","process","env","NODE_ENV","logger","collapsed","diff","push"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAoD;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACjE,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CV,OADjD;AAEA,MAAMW,WAAW,GAAG,CAACT,gBAAgB,CAACI,OAAD,CAAjB,EAA4BH,KAA5B,CAApB;;AAEA,MAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAMC,MAAM,GAAGd,YAAY,CAAC;AAAEe,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAD,CAA3B;AACAN,IAAAA,WAAW,CAACO,IAAZ,CAAiBH,MAAjB;AACD;;AAED,SAAOjB,WAAW,CAChBM,iBAAiB,CAACE,OAAD,CADD,EAEhBC,YAFgB,EAGhBC,gBAAgB,CAACT,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CAHA,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport thunk from \"redux-thunk\";\nimport CreateRootReducer from \"./reducers/index\";\n\nexport default function configureStore(history, initialState = {}) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewares = [routerMiddleware(history), thunk];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const logger = createLogger({ collapsed: true, diff: true });\n    middlewares.push(logger);\n  }\n\n  return createStore(\n    CreateRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n}\n"]},"metadata":{},"sourceType":"module"}