{"ast":null,"code":"import _regeneratorRuntime from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { push } from \"connected-react-router\";\nimport { postRegister, postLogin, postLogout, getConfirmation, resendConfirmation, resetRegister, sendResetPasswordLink, resetPassword } from \"../../api/index\";\nimport { login, logout } from \"../actions/user\";\nimport { dispatchError } from \"../../utils/api\";\nexport var attemptLogin = function attemptLogin(user) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return postLogin(user).then(function (res) {\n                  dispatch(login(res.data.user));\n                  dispatch(push(\"/home\"));\n                  return res.data;\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var attemptSendResetPasswordLink = function attemptSendResetPasswordLink(email) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return sendResetPasswordLink(email).catch(dispatch(push(\"/login/forgot\")));\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var attemptResetPassword = function attemptResetPassword(password, token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return resetPassword(password, token).then(function () {\n                  dispatch(push(\"/login\"));\n                }).catch(dispatch(push(\"/login/reset/\".concat(token))));\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var attemptLogout = function attemptLogout() {\n  return function (dispatch) {\n    return postLogout().then(function (res) {\n      dispatch(logout());\n      dispatch(push(\"/login\"));\n      return res.data;\n    }).catch(dispatchError(dispatch));\n  };\n};\nexport var attemptRegister = function attemptRegister(newUser) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return postRegister(newUser).catch(dispatch(push(\"/register\")));\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var attemptGetConfirmation = function attemptGetConfirmation(token) {\n  return function (dispatch) {\n    return getConfirmation(token).then(function () {\n      return dispatch(push(\"/login\"));\n    }).catch(dispatch(push(\"/register\")));\n  };\n};\nexport var attemptResendConfirmation = function attemptResendConfirmation(email) {\n  return function (dispatch) {\n    return resendConfirmation(email).catch(dispatch(push(\"/register\")));\n  };\n};\nexport var attemptResetRegister = function attemptResetRegister(email) {\n  return function (dispatch) {\n    return resetRegister(email).catch(dispatchError(dispatch));\n  };\n};","map":{"version":3,"sources":["/home/flav/Projects/Update/mern-authentification/client/src/store/thunks/auth.js"],"names":["push","postRegister","postLogin","postLogout","getConfirmation","resendConfirmation","resetRegister","sendResetPasswordLink","resetPassword","login","logout","dispatchError","attemptLogin","user","dispatch","then","res","data","attemptSendResetPasswordLink","email","catch","attemptResetPassword","password","token","attemptLogout","attemptRegister","newUser","attemptGetConfirmation","attemptResendConfirmation","attemptResetRegister"],"mappings":"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","sourcesContent":["import { push } from \"connected-react-router\";\n\nimport {\n  postRegister,\n  postLogin,\n  postLogout,\n  getConfirmation,\n  resendConfirmation,\n  resetRegister,\n  sendResetPasswordLink,\n  resetPassword\n} from \"../../api/index\";\nimport { login, logout } from \"../actions/user\";\n\nimport { dispatchError } from \"../../utils/api\";\n\nexport const attemptLogin = user => async dispatch => {\n  return await postLogin(user).then(res => {\n    dispatch(login(res.data.user));\n    dispatch(push(\"/home\"));\n    return res.data;\n  });\n};\n\nexport const attemptSendResetPasswordLink = email => async dispatch => {\n  return await sendResetPasswordLink(email).catch(\n    dispatch(push(\"/login/forgot\"))\n  );\n};\n\nexport const attemptResetPassword = (password, token) => async dispatch => {\n  return await resetPassword(password, token)\n    .then(() => {\n      dispatch(push(\"/login\"));\n    })\n    .catch(dispatch(push(`/login/reset/${token}`)));\n};\n\nexport const attemptLogout = () => dispatch =>\n  postLogout()\n    .then(res => {\n      dispatch(logout());\n      dispatch(push(\"/login\"));\n      return res.data;\n    })\n    .catch(dispatchError(dispatch));\n\nexport const attemptRegister = newUser => async dispatch => {\n  return await postRegister(newUser).catch(dispatch(push(\"/register\")));\n};\n\nexport const attemptGetConfirmation = token => dispatch =>\n  getConfirmation(token)\n    .then(() => {\n      return dispatch(push(\"/login\"));\n    })\n    .catch(dispatch(push(\"/register\")));\n\nexport const attemptResendConfirmation = email => dispatch =>\n  resendConfirmation(email).catch(dispatch(push(\"/register\")));\n\nexport const attemptResetRegister = email => dispatch =>\n  resetRegister(email).catch(dispatchError(dispatch));\n"]},"metadata":{},"sourceType":"module"}