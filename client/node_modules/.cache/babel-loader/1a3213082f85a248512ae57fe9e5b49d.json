{"ast":null,"code":"import _regeneratorRuntime from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/flav/Projects/Update/mern-authentification/client/src/components/pages/Register/Register.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../common/form/form\";\nimport R from \"../../../utils/ramda\";\nimport { attemptRegister as _attemptRegister, attemptResendConfirmation as _attemptResendConfirmation, attemptResetRegister as _attemptResetRegister } from \"../../../store/thunks/auth\";\nimport styles from \"./Register.module.css\";\n\nvar RegisterForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(RegisterForm, _Form);\n\n  function RegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.initialState = {\n      data: {\n        email: \"\",\n        password: \"\",\n        username: \"\"\n      },\n      errors: {},\n      submited: false,\n      resend: false\n    };\n    _this.state = _this.initialState;\n    _this.schema = {\n      email: Joi.string().email({\n        minDomainAtoms: 2\n      }).required().label(\"Email\"),\n      password: Joi.string().min(5).required().label(\"Password\"),\n      username: Joi.string().required()\n    };\n    _this.doSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _this.state.data;\n              _context.next = 3;\n              return _this.props.attemptRegister(data).then(function () {\n                return _this.setState({\n                  submited: true\n                });\n              }).catch(function (error) {\n                if (error.response && error.response.status === 400) {\n                  var errors = _objectSpread({}, _this.state.errors);\n\n                  if (error.response.data.message.includes(\"Email\")) {\n                    errors.email = error.response.data.message;\n                  } else {\n                    errors.username = error.response.data.message;\n                  }\n\n                  _this.setState({\n                    errors: errors\n                  });\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.resendEmail =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var email;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              email = _this.state.data.email;\n              _context2.next = 3;\n              return _this.props.attemptResendConfirmation(email).then(function () {\n                return _this.setState({\n                  resend: true\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.reset =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var email;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              email = _this.state.data.email;\n              _context3.next = 3;\n              return _this.props.attemptResetRegister(email).then(function () {\n                return _this.setState(_this.initialState);\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, !this.state.resend && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, !this.state.submited && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Create an account\"), React.createElement(\"div\", {\n        id: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"ui large form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.renderInput(\"username\", \"Username\", \"text\", \"user icon\"), this.renderInput(\"email\", \"Email\", \"text\", \"envelope icon\"), this.renderInput(\"password\", \"Password\", \"password\", \"lock icon\"), this.renderButton(\"Sign Up\", styles.signupBtn, \"signup icon\")))), this.state.submited && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui icon positive message\",\n        id: styles.messageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"inbox icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"A verification email has been sent.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Check you mailbox : \", this.state.data.email, \". \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), \" You have 12 hours to activate your account. It can take up to 15 min to receive our email.\"), React.createElement(\"button\", {\n        onClick: this.resendEmail,\n        className: \"ui basic button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Did not receive the email? Click here to send again.\"))))), this.state.resend && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui icon warning message\",\n        id: styles.messageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"inbox icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Still not received an email? \"), \"Try to register again. You may have given the wrong email.\", \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), \"If you want to be able to user the same username :\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui small basic button\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Click here to try again.\")))));\n    }\n  }]);\n\n  return RegisterForm;\n}(Form);\n\nvar mapStateToProps = R.pick([]);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    attemptRegister: function attemptRegister(newUser) {\n      return dispatch(_attemptRegister(newUser));\n    },\n    attemptResendConfirmation: function attemptResendConfirmation(email) {\n      return dispatch(_attemptResendConfirmation(email));\n    },\n    attemptResetRegister: function attemptResetRegister(email) {\n      return dispatch(_attemptResetRegister(email));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/home/flav/Projects/Update/mern-authentification/client/src/components/pages/Register/Register.jsx"],"names":["React","connect","Joi","Form","R","attemptRegister","attemptResendConfirmation","attemptResetRegister","styles","RegisterForm","initialState","data","email","password","username","errors","submited","resend","state","schema","string","minDomainAtoms","required","label","min","doSubmit","props","then","setState","catch","error","response","status","message","includes","resendEmail","reset","container","title","formContainer","handleSubmit","renderInput","renderButton","signupBtn","messageContainer","mapStateToProps","pick","mapDispatchToProps","dispatch","newUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../common/form/form\";\nimport R from \"../../../utils/ramda\";\nimport {\n  attemptRegister,\n  attemptResendConfirmation,\n  attemptResetRegister\n} from \"../../../store/thunks/auth\";\nimport styles from \"./Register.module.css\";\nclass RegisterForm extends Form {\n  initialState = {\n    data: { email: \"\", password: \"\", username: \"\" },\n    errors: {},\n    submited: false,\n    resend: false\n  };\n\n  state = this.initialState;\n\n  schema = {\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .required()\n      .label(\"Email\"),\n    password: Joi.string()\n      .min(5)\n      .required()\n      .label(\"Password\"),\n    username: Joi.string().required()\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props\n      .attemptRegister(data)\n      .then(() => this.setState({ submited: true }))\n      .catch(error => {\n        if (error.response && error.response.status === 400) {\n          const errors = { ...this.state.errors };\n          if (error.response.data.message.includes(\"Email\")) {\n            errors.email = error.response.data.message;\n          } else {\n            errors.username = error.response.data.message;\n          }\n\n          this.setState({ errors });\n        }\n      });\n  };\n\n  resendEmail = async () => {\n    const email = this.state.data.email;\n    await this.props\n      .attemptResendConfirmation(email)\n      .then(() => this.setState({ resend: true }));\n  };\n\n  reset = async () => {\n    const email = this.state.data.email;\n    await this.props\n      .attemptResetRegister(email)\n      .then(() => this.setState(this.initialState));\n  };\n\n  render() {\n    return (\n      <div id={styles.container}>\n        {!this.state.resend && (\n          <React.Fragment>\n            {!this.state.submited && (\n              <div>\n                <p id={styles.title}>Create an account</p>\n                <div id={styles.formContainer}>\n                  <form onSubmit={this.handleSubmit} className=\"ui large form\">\n                    {this.renderInput(\n                      \"username\",\n                      \"Username\",\n                      \"text\",\n                      \"user icon\"\n                    )}\n                    {this.renderInput(\n                      \"email\",\n                      \"Email\",\n                      \"text\",\n                      \"envelope icon\"\n                    )}\n                    {this.renderInput(\n                      \"password\",\n                      \"Password\",\n                      \"password\",\n                      \"lock icon\"\n                    )}\n                    {this.renderButton(\n                      \"Sign Up\",\n                      styles.signupBtn,\n                      \"signup icon\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            )}\n            {this.state.submited && (\n              <React.Fragment>\n                <div\n                  className=\"ui icon positive message\"\n                  id={styles.messageContainer}\n                >\n                  <i className=\"inbox icon\" />\n                  <div className=\"content\">\n                    <div className=\"header\">\n                      A verification email has been sent.\n                    </div>\n                    <p>\n                      Check you mailbox : {this.state.data.email}. <br /> You\n                      have 12 hours to activate your account. It can take up to\n                      15 min to receive our email.\n                    </p>\n                    <button\n                      onClick={this.resendEmail}\n                      className=\"ui basic button\"\n                    >\n                      Did not receive the email? Click here to send again.\n                    </button>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        {this.state.resend && (\n          <React.Fragment>\n            <div\n              className=\"ui icon warning message\"\n              id={styles.messageContainer}\n            >\n              <i className=\"inbox icon\" />\n              <div className=\"content\">\n                <div class=\"header\">Still not received an email? </div>\n                Try to register again. You may have given the wrong email.{\" \"}\n                <br />\n                If you want to be able to user the same username :<br />\n                <button className=\"ui small basic button\" onClick={this.reset}>\n                  Click here to try again.\n                </button>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = R.pick([]);\n\nconst mapDispatchToProps = dispatch => ({\n  attemptRegister: newUser => dispatch(attemptRegister(newUser)),\n  attemptResendConfirmation: email =>\n    dispatch(attemptResendConfirmation(email)),\n  attemptResetRegister: email => dispatch(attemptResetRegister(email))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}