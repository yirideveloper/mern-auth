{"ast":null,"code":"import _regeneratorRuntime from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/flav/Projects/Update/mern-authentification/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/flav/Projects/Update/mern-authentification/client/src/components/pages/LoginForgot/LoginForgot.jsx\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../common/form/form.jsx\";\nimport { attemptSendResetPasswordLink as _attemptSendResetPasswordLink } from \"../../../store/thunks/auth\";\nimport styles from \"./LoginForgot.module.css\";\n\nvar LoginForgot =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(LoginForgot, _Form);\n\n  function LoginForgot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForgot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForgot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        email: \"\"\n      },\n      errors: {},\n      submited: false\n    };\n    _this.schema = {\n      email: Joi.string().email({\n        minDomainAtoms: 2\n      }).required().label(\"Email\")\n    };\n    _this.doSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _this.state.data;\n              _context.next = 3;\n              return _this.props.attemptSendResetPasswordLink(data.email).then(function () {\n                return _this.setState({\n                  submited: true\n                });\n              }).catch(function (error) {\n                if (error.response && error.response.status === 400) {\n                  var errors = _objectSpread({}, _this.state.errors);\n\n                  errors.email = error.response.data.message;\n\n                  _this.setState({\n                    errors: errors\n                  });\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(LoginForgot, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.isAuth) return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }); // ne peut pas se relog si deja log\n\n      return React.createElement(\"div\", {\n        id: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, !this.state.submited && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Reset password\"), React.createElement(\"div\", {\n        id: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"We will send you a reset link on the following email :\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"ui large form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.renderInput(\"email\", \"Email\", \"text\", \"envelope icon\"), this.renderButton(\"SEND RESET LINK\")))), this.state.submited && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui icon positive message\",\n        id: styles.messageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"inbox icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"A reset link has been sent.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"An reset link has been sent to :\", this.state.data.email, \". You have 12 hours to activate your account. It can take up to 15 min to receive our email.\")))));\n    }\n  }]);\n\n  return LoginForgot;\n}(Form);\n\nfunction mapStateToProps(_ref2) {\n  var user = _ref2.user;\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptSendResetPasswordLink: function attemptSendResetPasswordLink(email) {\n      return dispatch(_attemptSendResetPasswordLink(email));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForgot);","map":{"version":3,"sources":["/home/flav/Projects/Update/mern-authentification/client/src/components/pages/LoginForgot/LoginForgot.jsx"],"names":["React","Redirect","connect","Joi","Form","attemptSendResetPasswordLink","styles","LoginForgot","state","data","email","errors","submited","schema","string","minDomainAtoms","required","label","doSubmit","props","then","setState","catch","error","response","status","message","isAuth","container","title","formContainer","handleSubmit","renderInput","renderButton","messageContainer","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../common/form/form.jsx\";\nimport { attemptSendResetPasswordLink } from \"../../../store/thunks/auth\";\nimport styles from \"./LoginForgot.module.css\";\nclass LoginForgot extends Form {\n  state = {\n    data: { email: \"\" },\n    errors: {},\n    submited: false\n  };\n\n  schema = {\n    email: Joi.string()\n      .email({ minDomainAtoms: 2 })\n      .required()\n      .label(\"Email\")\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    await this.props\n      .attemptSendResetPasswordLink(data.email)\n      .then(() => this.setState({ submited: true }))\n      .catch(error => {\n        if (error.response && error.response.status === 400) {\n          const errors = { ...this.state.errors };\n          errors.email = error.response.data.message;\n          this.setState({ errors });\n        }\n      });\n  };\n\n  render() {\n    if (this.props.isAuth) return <Redirect to=\"/home\" />; // ne peut pas se relog si deja log\n\n    return (\n      <div id={styles.container}>\n        {!this.state.submited && (\n          <React.Fragment>\n            <p id={styles.title}>Reset password</p>\n            <div id={styles.formContainer}>\n              <p>We will send you a reset link on the following email :</p>\n              <form onSubmit={this.handleSubmit} className=\"ui large form\">\n                {this.renderInput(\"email\", \"Email\", \"text\", \"envelope icon\")}\n                {this.renderButton(\"SEND RESET LINK\")}\n              </form>\n            </div>\n          </React.Fragment>\n        )}\n        {this.state.submited && (\n          <React.Fragment>\n            <div\n              className=\"ui icon positive message\"\n              id={styles.messageContainer}\n            >\n              <i className=\"inbox icon\" />\n              <div className=\"content\">\n                <div className=\"header\">A reset link has been sent.</div>\n                <p>\n                  An reset link has been sent to :{this.state.data.email}. You\n                  have 12 hours to activate your account. It can take up to 15\n                  min to receive our email.\n                </p>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return {\n    isAuth: user.isAuth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptSendResetPasswordLink: email =>\n      dispatch(attemptSendResetPasswordLink(email))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForgot);\n"]},"metadata":{},"sourceType":"module"}