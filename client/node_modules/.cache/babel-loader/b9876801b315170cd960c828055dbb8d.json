{"ast":null,"code":"import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\naxios.interceptors.response.use(null, function (error) {\n  var expectedError = error.response && error.response.status >= 400 && error.response.status <= 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occured\");\n  }\n\n  return Promise.reject(error);\n});\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};","map":{"version":3,"sources":["/home/flav/Projects/Update/mern-authentification/client/src/services/httpService.js"],"names":["axios","logger","toast","defaults","baseURL","process","env","REACT_APP_API_URL","withCredentials","interceptors","response","use","error","expectedError","status","log","Promise","reject","get","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,iBAArC;AACAP,KAAK,CAACG,QAAN,CAAeK,eAAf,GAAiC,IAAjC;AAEAR,KAAK,CAACS,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAsC,UAAAC,KAAK,EAAI;AAC7C,MAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GAH3B;;AAKA,MAAI,CAACD,aAAL,EAAoB;AAClBZ,IAAAA,MAAM,CAACc,GAAP,CAAWH,KAAX;AACAV,IAAAA,KAAK,CAACU,KAAN,CAAY,6BAAZ;AACD;;AAED,SAAOI,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD,CAZD;AAcA,eAAe;AACbM,EAAAA,GAAG,EAAElB,KAAK,CAACkB,GADE;AAEbC,EAAAA,IAAI,EAAEnB,KAAK,CAACmB,IAFC;AAGbC,EAAAA,GAAG,EAAEpB,KAAK,CAACoB,GAHE;AAIbC,EAAAA,MAAM,EAAErB,KAAK,CAACqB;AAJD,CAAf","sourcesContent":["import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status <= 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occured\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n"]},"metadata":{},"sourceType":"module"}